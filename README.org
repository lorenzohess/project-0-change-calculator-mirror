* Change Calculator
This CLI change calculator can replace the change-calculation functionality of a cash register (see project requirements [[file:change_calculator.pdf][PDF]].) It prints exact change given a purchase amount and the amount paid. We print change in US currency with maximum highest denomination first using $5, $1, .

Available at [[https://gitlab.com/lorenzohess/project-0-change-calculator][gitlab.com/lorenzohess/project-0-change-calculator]].
** Technical Requirements
No arrays, pointers, or global variables.
** Pseudocode
See [[file:pseudocode.txt][pseudocode.txt]].
** Dependencies
The C =stdio= library.
** Build
Compile with GCC. Suggested command: =gcc change_calculator.c -Wall -o getChange=.
** Usage
In Bash, run with: =./getChange=. Requires executable permissions.

The calculator asks the user to input the purchase total, in dollars, and then the amount paid, in dollars.

Example:
#+begin_src shell
$ ./getChange
Input purchase total:
10 # total cost is $10
Input amount paid:
17.65 # amount paid is $17.65
Your change is $7.65
  1 - 5D
  2 - 1D
  2 - Q
  1 - D
  1 - N
#+end_src

The calculator validates that amount paid >= purchase total:
#+begin_src shell
$ ./getChange
Input purchase total:
10
Input amount paid:
8
Insufficient payment.
#+end_src
** Sources
I asked my roommate about how floating point rounding when casting to =int=. I referenced a website for a method to correctly convert =float= to =int= without rounding: https://cboard.cprogramming.com/c-programming/107750-converting-float-integer-without-rounding-post793349.html#post793349 (see line 102).
